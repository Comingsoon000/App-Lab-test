{"version":3,"sources":["App/header/header.module.css","App/main/toDo/toDo.module.css","App/main/completed/complited.module.css","App/main/main.module.css","App/main/task/task.module.css","store/reducers/tasksReducer.ts","App/data/tasks.ts","store/reducers/rootReducer.ts","store/store.ts","assets/eisenhower-matrix.jpg","App/header/header.tsx","App/hooks/useTypedSelector.ts","App/main/validation.ts","App/main/addTask/addTask.tsx","App/main/task/task.tsx","App/main/toDo/toDo.tsx","App/main/completed/complited.tsx","App/main/main.tsx","App/App.tsx","index.tsx","App/main/addTask/addTask.module.css"],"names":["module","exports","TasksActionTypes","initialState","tasks","text","time","complited","addTask","state","payload","newTasks","putTask","map","task","deleteTask","filter","rootReducer","combineReducers","action","type","get","add","put","del","store","createStore","AppHeader","className","styles","header","image","src","alt","href","useTypedSelector","useSelector","isTextValid","find","AddTask","dispatch","useDispatch","useState","setText","wrapper","input","value","onChange","e","target","button","onClick","Date","toLocaleString","newTask","Task","curText","mode","setMode","editButtonClass","editButton","saveButton","coverClass","cover","hidden","textInputClass","checkbox","checked","changedTask","changeStatus","changeTask","puttingTask","delButton","deletingTask","ToDo","toDo","title","list","Complited","AppMain","main","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sGACAA,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,sBAAsB,KAAO,uB,mBCAvFD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,MAAQ,oBAAoB,KAAO,qB,mBCA/ED,EAAOC,QAAU,CAAC,UAAY,6BAA6B,MAAQ,2B,mBCAnED,EAAOC,QAAU,CAAC,KAAO,qB,kBCAzBD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,MAAQ,oBAAoB,KAAO,mBAAmB,KAAO,mBAAmB,QAAU,sBAAsB,SAAW,uBAAuB,WAAa,yBAAyB,UAAY,wBAAwB,WAAa,yBAAyB,OAAS,uB,gECK3SC,E,gFAAAA,K,gBAAAA,E,eAAAA,E,eAAAA,E,mBAAAA,M,KAYZ,IAAMC,EAAe,CACnBC,MCb4B,CAC5B,CACEC,KAAM,SACNC,KAAM,uBACNC,WAAW,GAEb,CACEF,KAAM,SACNC,KAAM,uBACNC,WAAW,GAEb,CACEF,KAAM,SACNC,KAAM,uBACNC,WAAW,KDQTC,EAAU,SAACC,EAAmBC,GAClC,IAAMC,EAAQ,sBAAOF,EAAML,OAAb,CAAoBM,IAElC,OADc,2BAAQD,GAAR,IAAeL,MAAOO,KAIhCC,EAAU,SAACH,EAAmBC,GAClC,IAAMC,EAAWF,EAAML,MAAMS,KAAI,SAACC,GAChC,OAAOA,EAAKR,OAASI,EAAQJ,KAAOI,EAAUI,KAGhD,OADc,2BAAQL,GAAR,IAAeL,MAAOO,KAIhCI,EAAa,SAACN,EAAmBC,GACrC,IAAMC,EAAWF,EAAML,MAAMY,QAAO,SAACF,GAAD,OAAUA,EAAKR,OAASI,EAAQJ,QAEpE,OADc,2BAAQG,GAAR,IAAeL,MAAOO,KEzCzBM,EAAcC,YAAgB,CACzCd,MF4C0B,WAGV,IAFhBK,EAEe,uDAFPN,EACRgB,EACe,uCACf,OAAQA,EAAOC,MACb,KAAKlB,EAAiBmB,IACpB,OAAOZ,EACT,KAAKP,EAAiBoB,IACpB,OAAOd,EAAQC,EAAOU,EAAOT,SAC/B,KAAKR,EAAiBqB,IACpB,OAAOX,EAAQH,EAAOU,EAAOT,SAC/B,KAAKR,EAAiBsB,IACpB,OAAOT,EAAWN,EAAOU,EAAOT,SAClC,QACE,OAAOD,MG3DAgB,EAAQC,YAAYT,G,iBCHlB,MAA0B,8C,OCG5BU,EAAY,WACvB,OACE,yBAAQC,UAAWC,IAAOC,OAA1B,UACE,qBACEF,UAAWC,IAAOE,MAClBC,IAAKD,EACLE,IAAI,6BAEN,8BACE,mBACEL,UAAWC,IAAOK,KAClBA,KAAK,sDAFP,sC,wBCTKC,EAAoDC,ICApDC,EAAc,SACzBhC,EACAC,EACAF,GAEA,MAAa,KAATC,IAIYD,EACbY,QAAO,SAACF,GAAD,OAAUA,EAAKR,OAASA,KAC/BgC,MAAK,SAACxB,GAAD,OAAUA,EAAKT,OAASA,M,gBCNrBkC,EAAU,WACrB,IAAMC,EAAWC,cACTrC,EAAU+B,GAAiB,SAAC1B,GAAD,OAAWA,EAAML,SAA5CA,MACR,EAAwBsC,mBAAS,IAAjC,mBAAOrC,EAAP,KAAasC,EAAb,KAeA,OACE,yBAASf,UAAWC,IAAOrB,QAA3B,SACE,sBAAKoB,UAAWC,IAAOe,QAAvB,UACE,uBACEhB,UAAWC,IAAOgB,MAClBzB,KAAK,OACL0B,MAAOzC,EACP0C,SAAU,SAACC,GAAD,OAAOL,EAAQK,EAAEC,OAAOH,UAEpC,wBAAQlB,UAAWC,IAAOqB,OAAQC,QAAS,kBAtBjC,WACd,IAAM7C,EAAI,WAAM,IAAI8C,MAAOC,kBAC3B,GAAIhB,EAAYhC,EAAMC,EAAMF,GAAQ,CAClC,IAAMkD,EAAiB,CACrBjD,OACAC,OACAC,WAAW,GAEbiC,EAAS,CAAEpB,KAAMlB,EAAiBoB,IAAKZ,QAAS4C,IAChDX,EAAQ,KAa2CnC,IAAjD,4B,iCCrBK+C,EAAO,SAAC,GAAsD,IAApDjD,EAAmD,EAAnDA,KAAMD,EAA6C,EAA7CA,KAAME,EAAuC,EAAvCA,UAC3BiC,EAAWC,cACTrC,EAAU+B,GAAiB,SAAC1B,GAAD,OAAWA,EAAML,SAA5CA,MACR,EAA2BsC,mBAASrC,GAApC,mBAAOmD,EAAP,KAAgBb,EAAhB,KACA,EAAwBD,oBAAS,GAAjC,mBAAOe,EAAP,KAAaC,EAAb,KACMC,EAAkBF,EAAO5B,IAAO+B,WAAa/B,IAAOgC,WACpDC,EAAaL,EAAO5B,IAAOkC,MAAQlC,IAAOmC,OAC1CC,EAAiBR,EAAO5B,IAAOmC,OAASnC,IAAOxB,KAsCrD,OACE,qBAAIuB,UAAWC,IAAOf,KAAtB,UACE,uBACEM,KAAK,WACLQ,UAAWC,IAAOqC,SAClBC,QAAS5D,EACTwC,SAAU,kBAtCK,WACnB,IAAMqB,EAAqB,CACzB/D,KAAMA,EACNC,KAAMA,EACNC,WAAYA,GAEdiC,EAAS,CAAEpB,KAAMlB,EAAiBqB,IAAKb,QAAS0D,IAgC5BC,MAElB,qBAAKzC,UAAWkC,EAAhB,SAA6BN,IAC7B,uBACE5B,UAAWqC,EACX7C,KAAK,OACL0B,MAAOU,EACPT,SAAU,SAACC,GAAD,OAjDG,SAACA,GAClBL,EAAQK,EAAEC,OAAOH,OAgDIwB,CAAWtB,MAE9B,sBAAKpB,UAAWC,IAAOe,QAAvB,UACE,mBAAGhB,UAAWC,IAAOvB,KAArB,SAA4BA,IAC5B,wBAAQsB,UAAW+B,EAAiBR,QAAS,kBAxCnC,WACd,GAAIM,EACFC,GAASD,QACJ,GAAIpB,EAAYmB,EAASlD,EAAMF,GAAQ,CAC5C,IAAMmE,EAAqB,CACzBlE,KAAMmD,EACNlD,KAAMA,EACNC,aAEFiC,EAAS,CAAEpB,KAAMlB,EAAiBqB,IAAKb,QAAS6D,IAChDb,GAASD,IA8B4C7C,MACnD,wBACEgB,UAAWC,IAAO2C,UAClBrB,QAAS,kBA7BE,WACjB,IAAMsB,EAAsB,CAC1BpE,OACAC,OACAC,aAEFiC,EAAS,CAAEpB,KAAMlB,EAAiBsB,IAAKd,QAAS+D,IAuB3B1D,WAnBYT,ICxDxBoE,EAAO,WAClB,IAAQtE,EAAU+B,GAAiB,SAAC1B,GAAD,OAAWA,EAAML,SAA5CA,MAER,OACE,0BAASwB,UAAWC,IAAO8C,KAA3B,UACE,oBAAI/C,UAAWC,IAAO+C,MAAtB,kBACA,oBAAIhD,UAAWC,IAAOgD,KAAtB,SACGzE,EACEY,QAAO,SAACF,GAAD,OAAWA,EAAKP,aACvBM,KAAI,SAACC,GACJ,OACE,cAAC,EAAD,CAEET,KAAMS,EAAKT,KACXC,KAAMQ,EAAKR,KACXC,UAAWO,EAAKP,WAHXO,EAAKR,e,iBCZbwE,EAAY,WACvB,IAAQ1E,EAAU+B,GAAiB,SAAC1B,GAAD,OAAWA,EAAML,SAA5CA,MAER,OACE,0BAASwB,UAAWC,IAAOtB,UAA3B,UACE,oBAAIqB,UAAWC,IAAO+C,MAAtB,kBACA,6BACGxE,EACEY,QAAO,SAACF,GAAD,OAAUA,EAAKP,aACtBM,KAAI,SAACC,GAAD,OACH,cAAC,EAAD,CAEET,KAAMS,EAAKT,KACXC,KAAMQ,EAAKR,KACXC,UAAWO,EAAKP,WAHXO,EAAKR,eCVXyE,EAAU,WACrB,OACE,uBAAMnD,UAAWC,IAAOmD,KAAxB,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCLOC,EAAM,WACjB,OACE,eAAC,IAAD,CAAUxD,MAAOA,EAAjB,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCJNyD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BtF,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,uBAAuB,QAAU,yBAAyB,MAAQ,uBAAuB,OAAS,2B","file":"static/js/main.77ca119f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__2T4zQ\",\"image\":\"header_image__3vRfG\",\"href\":\"header_href__himuH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toDo\":\"toDo_toDo__1CbjH\",\"title\":\"toDo_title__1o_4u\",\"list\":\"toDo_list__2X9mX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"complited\":\"complited_complited__uscp9\",\"title\":\"complited_title__YK1sX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"main_main__3KH0W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"task\":\"task_task__10Dzb\",\"cover\":\"task_cover__1zj_C\",\"text\":\"task_text__2vWFv\",\"time\":\"task_time__2A-Ja\",\"wrapper\":\"task_wrapper__3JvmJ\",\"checkbox\":\"task_checkbox__15prb\",\"editButton\":\"task_editButton__3P7QB\",\"delButton\":\"task_delButton__3uo_T\",\"saveButton\":\"task_saveButton__axRXu\",\"hidden\":\"task_hidden__3TomY\"};","import { tasks, ITask } from '../../App/data/tasks';\n\ninterface ITaskState {\n  tasks: ITask[];\n}\n\nexport enum TasksActionTypes {\n  get = 'GET_TASKS',\n  add = 'ADD_TASK',\n  put = 'PUT_TASK',\n  del = 'DELETE_TASK',\n}\n\ninterface ITasksAction {\n  type: TasksActionTypes;\n  payload: ITask;\n}\n\nconst initialState = {\n  tasks,\n};\n\n// операции по изменению данных лучше произовдить на стороне сервера\n// и конечно поиск и замену задач лучше производить по ID на стороне сервера\n// но т.к. тестовое задание выполняем без использования сервера, то выполним эти действия ниже\n// в качестве критерия по поиску текущей задачи в массиве будем использовать время\n// т.к. в рамках данного ТЗ оно почти всегда будет всегда уникальным\n\nconst addTask = (state: ITaskState, payload: ITask): ITaskState => {\n  const newTasks = [...state.tasks, payload];\n  const newState = { ...state, tasks: newTasks };\n  return newState;\n};\n\nconst putTask = (state: ITaskState, payload: ITask): ITaskState => {\n  const newTasks = state.tasks.map((task) => {\n    return task.time === payload.time ? payload : task;\n  });\n  const newState = { ...state, tasks: newTasks };\n  return newState;\n};\n\nconst deleteTask = (state: ITaskState, payload: ITask): ITaskState => {\n  const newTasks = state.tasks.filter((task) => task.time !== payload.time);\n  const newState = { ...state, tasks: newTasks };\n  return newState;\n};\n\nexport const tasksReducer = (\n  state = initialState,\n  action: ITasksAction\n): ITaskState => {\n  switch (action.type) {\n    case TasksActionTypes.get:\n      return state;\n    case TasksActionTypes.add:\n      return addTask(state, action.payload);\n    case TasksActionTypes.put:\n      return putTask(state, action.payload);\n    case TasksActionTypes.del:\n      return deleteTask(state, action.payload);\n    default:\n      return state;\n  }\n};\n","export interface ITask {\n  text: string;\n  time: string;\n  complited: boolean;\n}\n\nexport const tasks: ITask[] = [\n  {\n    text: 'Task 1',\n    time: '12.11.2021, 16:28:20',\n    complited: false,\n  },\n  {\n    text: 'Task 2',\n    time: '12.11.2021, 16:28:40',\n    complited: false,\n  },\n  {\n    text: 'Task 3',\n    time: '12.11.2021, 16:28:45',\n    complited: true,\n  },\n];\n","import { combineReducers } from 'redux';\nimport { tasksReducer } from './tasksReducer';\n\nexport const rootReducer = combineReducers({\n  tasks: tasksReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import { createStore } from 'redux';\nimport { rootReducer } from './reducers/rootReducer';\n\nexport const store = createStore(rootReducer);\n","export default __webpack_public_path__ + \"static/media/eisenhower-matrix.bb7a54f5.jpg\";","import styles from './header.module.css';\nimport image from '../../assets/eisenhower-matrix.jpg';\n\nexport const AppHeader = (): JSX.Element => {\n  return (\n    <header className={styles.header}>\n      <img\n        className={styles.image}\n        src={image}\n        alt=\"Eisenhower Matrix scheme\"\n      />\n      <nav>\n        <a\n          className={styles.href}\n          href=\"https://goal-life.com/page/method/matrix-eisenhower\"\n        >\n          Want more details?\n        </a>\n      </nav>\n    </header>\n  );\n};\n","import { TypedUseSelectorHook, useSelector } from 'react-redux';\nimport { RootState } from '../../store/reducers/rootReducer';\n\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { ITask } from '../data/tasks';\n\n// если текст задачи уже есть в задачах, то возращаем false, иначе true\nexport const isTextValid = (\n  text: string | undefined,\n  time: string,\n  tasks: ITask[]\n): boolean => {\n  if (text === '') {\n    return false;\n  }\n\n  const result = !tasks\n    .filter((task) => task.time !== time)\n    .find((task) => task.text === text);\n\n  return result;\n};\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { TasksActionTypes } from '../../../store/reducers/tasksReducer';\nimport { ITask } from '../../data/tasks';\nimport { useTypedSelector } from '../../hooks/useTypedSelector';\nimport { isTextValid } from '../validation';\nimport styles from './addTask.module.css';\n\nexport const AddTask = (): JSX.Element => {\n  const dispatch = useDispatch();\n  const { tasks } = useTypedSelector((state) => state.tasks);\n  const [text, setText] = useState('');\n\n  const addTask = () => {\n    const time = `${new Date().toLocaleString()}`;\n    if (isTextValid(text, time, tasks)) {\n      const newTask: ITask = {\n        text,\n        time,\n        complited: false,\n      };\n      dispatch({ type: TasksActionTypes.add, payload: newTask });\n      setText('');\n    }\n  };\n\n  return (\n    <section className={styles.addTask}>\n      <div className={styles.wrapper}>\n        <input\n          className={styles.input}\n          type=\"text\"\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n        />\n        <button className={styles.button} onClick={() => addTask()}>\n          add task\n        </button>\n      </div>\n    </section>\n  );\n};\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { TasksActionTypes } from '../../../store/reducers/tasksReducer';\nimport { ITask } from '../../data/tasks';\nimport { useTypedSelector } from '../../hooks/useTypedSelector';\nimport { isTextValid } from '../validation';\nimport styles from './task.module.css';\n\ninterface TaskProp {\n  text: string;\n  time: string;\n  complited: boolean;\n}\n\nexport const Task = ({ time, text, complited }: TaskProp): JSX.Element => {\n  const dispatch = useDispatch();\n  const { tasks } = useTypedSelector((state) => state.tasks);\n  const [curText, setText] = useState(text);\n  const [mode, setMode] = useState(true);\n  const editButtonClass = mode ? styles.editButton : styles.saveButton;\n  const coverClass = mode ? styles.cover : styles.hidden;\n  const textInputClass = mode ? styles.hidden : styles.text;\n\n  const changeTask = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setText(e.target.value);\n  };\n\n  const changeStatus = () => {\n    const changedTask: ITask = {\n      text: text,\n      time: time,\n      complited: !complited,\n    };\n    dispatch({ type: TasksActionTypes.put, payload: changedTask });\n  };\n\n  const putTask = () => {\n    if (mode) {\n      setMode(!mode);\n    } else if (isTextValid(curText, time, tasks)) {\n      const puttingTask: ITask = {\n        text: curText,\n        time: time,\n        complited,\n      };\n      dispatch({ type: TasksActionTypes.put, payload: puttingTask });\n      setMode(!mode);\n    }\n  };\n\n  const deleteTask = () => {\n    const deletingTask: ITask = {\n      text,\n      time,\n      complited,\n    };\n    dispatch({ type: TasksActionTypes.del, payload: deletingTask });\n  };\n\n  return (\n    <li className={styles.task} key={time}>\n      <input\n        type=\"checkbox\"\n        className={styles.checkbox}\n        checked={complited}\n        onChange={() => changeStatus()}\n      />\n      <div className={coverClass}>{curText}</div>\n      <input\n        className={textInputClass}\n        type=\"text\"\n        value={curText}\n        onChange={(e) => changeTask(e)}\n      />\n      <div className={styles.wrapper}>\n        <p className={styles.time}>{time}</p>\n        <button className={editButtonClass} onClick={() => putTask()}></button>\n        <button\n          className={styles.delButton}\n          onClick={() => deleteTask()}\n        ></button>\n      </div>\n    </li>\n  );\n};\n","import styles from './toDo.module.css';\nimport { Task } from '../task/task';\nimport { useTypedSelector } from '../../hooks/useTypedSelector';\n\nexport const ToDo = (): JSX.Element => {\n  const { tasks } = useTypedSelector((state) => state.tasks);\n\n  return (\n    <section className={styles.toDo}>\n      <h3 className={styles.title}>todo</h3>\n      <ul className={styles.list}>\n        {tasks\n          .filter((task) => !task.complited)\n          .map((task) => {\n            return (\n              <Task\n                key={task.time}\n                text={task.text}\n                time={task.time}\n                complited={task.complited}\n              />\n            );\n          })}\n      </ul>\n    </section>\n  );\n};\n","import styles from './complited.module.css';\nimport { Task } from '../task/task';\nimport { useTypedSelector } from '../../hooks/useTypedSelector';\n\nexport const Complited = (): JSX.Element => {\n  const { tasks } = useTypedSelector((state) => state.tasks);\n\n  return (\n    <section className={styles.complited}>\n      <h3 className={styles.title}>done</h3>\n      <ul>\n        {tasks\n          .filter((task) => task.complited)\n          .map((task) => (\n            <Task\n              key={task.time}\n              text={task.text}\n              time={task.time}\n              complited={task.complited}\n            />\n          ))}\n      </ul>\n    </section>\n  );\n};\n","import styles from './main.module.css';\nimport { AddTask } from './addTask/addTask';\nimport { ToDo } from './toDo/toDo';\nimport { Complited } from './completed/complited';\n\nexport const AppMain = (): JSX.Element => {\n  return (\n    <main className={styles.main}>\n      <AddTask />\n      <ToDo />\n      <Complited />\n    </main>\n  );\n};\n","import { Provider } from 'react-redux';\nimport { store } from '../store/store';\nimport { AppHeader } from './header/header';\nimport { AppMain } from './main/main';\n\nexport const App = (): JSX.Element => {\n  return (\n    <Provider store={store}>\n      <AppHeader></AppHeader>\n      <AppMain></AppMain>\n    </Provider>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addTask\":\"addTask_addTask__2eLTU\",\"title\":\"addTask_title__3riTw\",\"wrapper\":\"addTask_wrapper__3NwcH\",\"input\":\"addTask_input__GJn3n\",\"button\":\"addTask_button__Ah1d2\"};"],"sourceRoot":""}